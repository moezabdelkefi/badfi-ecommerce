{"ast":null,"code":"var _jsxFileName = \"/home/moez/badfi-ecommerce/src/components/pageProps/shopPage/Pagination.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ReactPaginate from \"react-paginate\";\nimport Product from \"../../home/Products/Product\";\nimport { paginationItems } from \"../../../constants\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst items = paginationItems;\nfunction Items(_ref) {\n  let {\n    currentItems\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_c = Items;\nconst Pagination = _ref2 => {\n  _s();\n  let {\n    itemsPerPage\n  } = _ref2;\n  // Here we use item offsets; we could also use page offsets\n  // following the API or data you're working with.\n  const [itemOffset, setItemOffset] = useState(0);\n  const [itemStart, setItemStart] = useState(1);\n\n  // Simulate fetching items from another resources.\n  // (This could be items from props; or items loaded in a local state\n  // from an API endpoint with useEffect and useState)\n  const endOffset = itemOffset + itemsPerPage;\n  //   console.log(`Loading items from ${itemOffset} to ${endOffset}`);\n  const currentItems = items.slice(itemOffset, endOffset);\n  const pageCount = Math.ceil(items.length / itemsPerPage);\n\n  // Invoke when user click to request another page.\n  const handlePageClick = event => {\n    const newOffset = event.selected * itemsPerPage % items.length;\n    setItemOffset(newOffset);\n    // console.log(\n    //   `User requested page number ${event.selected}, which is offset ${newOffset},`\n    // );\n    setItemStart(newOffset);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-10 mdl:gap-4 lg:gap-10\",\n      children: /*#__PURE__*/_jsxDEV(Items, {\n        currentItems: currentItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col mdl:flex-row justify-center mdl:justify-between items-center\",\n      children: [/*#__PURE__*/_jsxDEV(ReactPaginate, {\n        nextLabel: \"\",\n        onPageChange: handlePageClick,\n        pageRangeDisplayed: 3,\n        marginPagesDisplayed: 2,\n        pageCount: pageCount,\n        previousLabel: \"\",\n        pageLinkClassName: \"w-9 h-9 border-[1px] border-lightColor hover:border-gray-500 duration-300 flex justify-center items-center\",\n        pageClassName: \"mr-6\",\n        containerClassName: \"flex text-base font-semibold font-titleFont py-10\",\n        activeClassName: \"bg-black text-white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-base font-normal text-lightText\",\n        children: [\"Products from \", itemStart === 0 ? 1 : itemStart, \" to \", endOffset, \" of\", \" \", items.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Pagination, \"I1vy2A3CilnMc+6CFGCg6xK2Lj4=\");\n_c2 = Pagination;\nexport default Pagination;\nvar _c, _c2;\n$RefreshReg$(_c, \"Items\");\n$RefreshReg$(_c2, \"Pagination\");","map":{"version":3,"names":["React","useState","ReactPaginate","Product","paginationItems","items","Items","currentItems","Pagination","itemsPerPage","itemOffset","setItemOffset","itemStart","setItemStart","endOffset","slice","pageCount","Math","ceil","length","handlePageClick","event","newOffset","selected"],"sources":["/home/moez/badfi-ecommerce/src/components/pageProps/shopPage/Pagination.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport ReactPaginate from \"react-paginate\";\nimport Product from \"../../home/Products/Product\";\nimport { paginationItems } from \"../../../constants\";\n\nconst items = paginationItems;\nfunction Items({ currentItems }) {\n  return (\n    <>\n      \n    </>\n  );\n}\n\nconst Pagination = ({ itemsPerPage }) => {\n  // Here we use item offsets; we could also use page offsets\n  // following the API or data you're working with.\n  const [itemOffset, setItemOffset] = useState(0);\n  const [itemStart, setItemStart] = useState(1);\n\n  // Simulate fetching items from another resources.\n  // (This could be items from props; or items loaded in a local state\n  // from an API endpoint with useEffect and useState)\n  const endOffset = itemOffset + itemsPerPage;\n  //   console.log(`Loading items from ${itemOffset} to ${endOffset}`);\n  const currentItems = items.slice(itemOffset, endOffset);\n  const pageCount = Math.ceil(items.length / itemsPerPage);\n\n  // Invoke when user click to request another page.\n  const handlePageClick = (event) => {\n    const newOffset = (event.selected * itemsPerPage) % items.length;\n    setItemOffset(newOffset);\n    // console.log(\n    //   `User requested page number ${event.selected}, which is offset ${newOffset},`\n    // );\n    setItemStart(newOffset);\n  };\n\n  return (\n    <div>\n      <div className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-10 mdl:gap-4 lg:gap-10\">\n        <Items currentItems={currentItems} />\n      </div>\n      <div className=\"flex flex-col mdl:flex-row justify-center mdl:justify-between items-center\">\n        <ReactPaginate\n          nextLabel=\"\"\n          onPageChange={handlePageClick}\n          pageRangeDisplayed={3}\n          marginPagesDisplayed={2}\n          pageCount={pageCount}\n          previousLabel=\"\"\n          pageLinkClassName=\"w-9 h-9 border-[1px] border-lightColor hover:border-gray-500 duration-300 flex justify-center items-center\"\n          pageClassName=\"mr-6\"\n          containerClassName=\"flex text-base font-semibold font-titleFont py-10\"\n          activeClassName=\"bg-black text-white\"\n        />\n\n        <p className=\"text-base font-normal text-lightText\">\n          Products from {itemStart === 0 ? 1 : itemStart} to {endOffset} of{\" \"}\n          {items.length}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Pagination;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,aAAa,MAAM,gBAAgB;AAC1C,OAAOC,OAAO,MAAM,6BAA6B;AACjD,SAASC,eAAe,QAAQ,oBAAoB;AAAC;AAAA;AAErD,MAAMC,KAAK,GAAGD,eAAe;AAC7B,SAASE,KAAK,OAAmB;EAAA,IAAlB;IAAEC;EAAa,CAAC;EAC7B,oBACE,qCAEG;AAEP;AAAC,KANQD,KAAK;AAQd,MAAME,UAAU,GAAG,SAAsB;EAAA;EAAA,IAArB;IAAEC;EAAa,CAAC;EAClC;EACA;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;;EAE7C;EACA;EACA;EACA,MAAMa,SAAS,GAAGJ,UAAU,GAAGD,YAAY;EAC3C;EACA,MAAMF,YAAY,GAAGF,KAAK,CAACU,KAAK,CAACL,UAAU,EAAEI,SAAS,CAAC;EACvD,MAAME,SAAS,GAAGC,IAAI,CAACC,IAAI,CAACb,KAAK,CAACc,MAAM,GAAGV,YAAY,CAAC;;EAExD;EACA,MAAMW,eAAe,GAAIC,KAAK,IAAK;IACjC,MAAMC,SAAS,GAAID,KAAK,CAACE,QAAQ,GAAGd,YAAY,GAAIJ,KAAK,CAACc,MAAM;IAChER,aAAa,CAACW,SAAS,CAAC;IACxB;IACA;IACA;IACAT,YAAY,CAACS,SAAS,CAAC;EACzB,CAAC;EAED,oBACE;IAAA,wBACE;MAAK,SAAS,EAAC,2EAA2E;MAAA,uBACxF,QAAC,KAAK;QAAC,YAAY,EAAEf;MAAa;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACjC,eACN;MAAK,SAAS,EAAC,4EAA4E;MAAA,wBACzF,QAAC,aAAa;QACZ,SAAS,EAAC,EAAE;QACZ,YAAY,EAAEa,eAAgB;QAC9B,kBAAkB,EAAE,CAAE;QACtB,oBAAoB,EAAE,CAAE;QACxB,SAAS,EAAEJ,SAAU;QACrB,aAAa,EAAC,EAAE;QAChB,iBAAiB,EAAC,4GAA4G;QAC9H,aAAa,EAAC,MAAM;QACpB,kBAAkB,EAAC,mDAAmD;QACtE,eAAe,EAAC;MAAqB;QAAA;QAAA;QAAA;MAAA,QACrC,eAEF;QAAG,SAAS,EAAC,sCAAsC;QAAA,6BAClCJ,SAAS,KAAK,CAAC,GAAG,CAAC,GAAGA,SAAS,UAAME,SAAS,SAAK,GAAG,EACpET,KAAK,CAACc,MAAM;MAAA;QAAA;QAAA;QAAA;MAAA,QACX;IAAA;MAAA;MAAA;MAAA;IAAA,QACA;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,GAlDIX,UAAU;AAAA,MAAVA,UAAU;AAoDhB,eAAeA,UAAU;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}